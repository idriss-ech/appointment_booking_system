<?php




/**
 * @file
 * Install file for MODULE_NAME.
 */

use Drupal\taxonomy\Entity\Term;
use Drupal\taxonomy\Entity\Vocabulary;
use Drupal\core\Render\Markup;


/**
 * Implements hook_theme() to register templates.
 */
function appointment_booking_theme($existing, $type, $theme, $path)
{
  return [
    'agency_selection' => [
      'variables' => ['agencies' => NULL],
      'template' => 'agency-selection',
    ],
    'appointment_type_selection' => [
      'variables' => ['terms' => NULL],
      'template' => 'appointment-type-selection',
    ],
    'adviser_selection' => [
      'variables' => ['advisers' => NULL],
      'template' => 'adviser-selection',
    ],
    'appointment_information' => [
      'variables' => [
        'date' => '',
        'start_time' => '',
        'end_time' => ''
      ],
      'template' => 'appointment-information',
    ],
    'appointment_confirmation_profile' => [
      'variables' => [
        'confirmation_data' => NULL,
      ],
      'template' => 'appointment-confirmation-profile',
    ],
    'appointment_confirmation_appointment' => [
      'variables' => [
        'confirmation_data' => NULL,
      ],
      'template' => 'appointment-confirmation-appointment',
    ],
    'appointment_success_message' => [
      'variables' => [
      ],
      'template' => 'appointment-success-message',
    ],
    'appointment_item' => [
      'variables' => [
        'date_string' => NULL,
        'title' => NULL,
        'adviser' => NULL,
        'agency' => NULL,
        'appointment_type' => NULL,
        'edit_url' => NULL,
        'delete_url' => NULL,
      ],
      'template' => 'appointment-item',
    ],
    'appointment_confirmation_email' => [
      'variables' => [
        'agency_name' => '',
        'adviser_name' => '',
        'date_time' => '',
        'customer_name' => '',
      ],
      'template' => 'appointment-confirmation-email',
    ],
  ];

}

/**
 * Implements hook_mail().
 */
function appointment_booking_mail($key, &$message, $params) {
  switch ($key) {
    case 'appointment_confirmation':
      $message['subject'] = $params['subject'];
      $message['body'][] = Markup::create($params['message']);
      break;
    case 'phone_verification':
      $message['subject'] = $params['subject'];
      $message['body'] = $params['body'];
      break;
  }
}

/**
 * Implements hook_install().
 */
function appointment_booking_install()
{
  // Check if the taxonomy module is enabled.
  if (\Drupal::moduleHandler()->moduleExists('taxonomy')) {
    // Create the "Appointment Types" vocabulary.
    $vocabulary = Vocabulary::create([
      'vid' => 'appointment_types', // Machine name of the vocabulary.
      'name' => 'Appointment Types', // Human-readable name.
      'description' => 'A list of appointment types.', // Optional description.
    ]);
    $vocabulary->save();

    // Add terms to the "Appointment Types" vocabulary.
    $terms = [
      'Business appointments',
      'Professional stuff',
      'Consultation',
      'Check-up',
      'Follow-up',
      'Emergency',
    ];

    foreach ($terms as $term_name) {
      $term = Term::create([
        'vid' => 'appointment_types', // Associate the term with the vocabulary.
        'name' => $term_name, // Term name.
      ]);
      $term->save();
    }
  }
}

/**
 * Implements hook_uninstall().
 */
function appointment_booking_uninstall()
{
  // Delete the "Appointment Types" vocabulary and its terms.
  $vocabulary = Vocabulary::load('appointment_types');
  if ($vocabulary) {
    $vocabulary->delete();
  }
}


